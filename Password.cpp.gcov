        -:    0:Source:Password.cpp
        -:    0:Graph:Password.gcno
        -:    0:Data:Password.gcda
        -:    0:Runs:1
        -:    1:#include "Password.h"
        -:    2:#include <string>
        -:    3:using std::string;
        -:    4:/*
        -:    5:  The function receives a string counts how many times the same character 
        -:    6:  occurs at the beginning of the string, before any other characters (or the
        -:    7:  end of the string). The function is case-sensitive so 'Z' is different than
        -:    8:  'z' and any ASCII characters are allowed.
        -:    9:*/
function _ZN8Password24count_leading_charactersENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 13 returned 100% blocks executed 100%
       13:   10:int Password::count_leading_characters(string phrase){
       13:   11:  int repetition = 1;
       13:   12:  int index = 0;
       13:   13:  if(phrase.size() <= 0) return 0;
call    0 returned 13
branch  1 taken 1 (fallthrough)
branch  2 taken 12
       38:   14:  while( index < phrase.length()-1 && phrase[index] == phrase[index+1] ){
call    0 returned 38
branch  1 taken 34 (fallthrough)
branch  2 taken 4
call    3 returned 34
call    4 returned 34
branch  5 taken 26 (fallthrough)
branch  6 taken 8
branch  7 taken 26
branch  8 taken 12 (fallthrough)
       26:   15:    repetition++;
       26:   16:    index++;
        -:   17:  }
       12:   18:  return repetition;
        -:   19:}
function _ZN8PasswordC2Ev called 24 returned 100% blocks executed 53%
       24:   20:Password::Password(){
call    0 returned 24
       24:   21:  pass_history.push_back("ChicoCA-95929");
call    0 returned 24
call    1 returned 24
branch  2 taken 24 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 24
branch  5 taken 24 (fallthrough)
branch  6 taken 0 (throw)
call    7 returned 24
call    8 returned 24
call    9 never executed
call   10 never executed
       24:   22:}
call    0 never executed
function _ZN8Password14has_mixed_caseENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 13 returned 100% blocks executed 100%
       13:   23:bool Password::has_mixed_case(string word){
       13:   24:  bool found = false;
       82:   25:  for(char c : word){
call    0 returned 13
call    1 returned 13
call    2 returned 75
call    3 returned 69
call    4 returned 82
branch  5 taken 75
branch  6 taken 7 (fallthrough)
       75:   26:    if( !found && c >= 'A' && c <= 'Z' ){
branch  0 taken 67 (fallthrough)
branch  1 taken 8
branch  2 taken 47 (fallthrough)
branch  3 taken 20
branch  4 taken 7 (fallthrough)
branch  5 taken 40
        7:   27:      found = true;
        -:   28:    }
       68:   29:    else if( found && c >= 'a' && c <= 'z'){
branch  0 taken 8 (fallthrough)
branch  1 taken 60
branch  2 taken 6 (fallthrough)
branch  3 taken 2
branch  4 taken 6 (fallthrough)
branch  5 taken 0
        6:   30:      return true;
        -:   31:    }
        -:   32:  }
        7:   33:  return false;
        -:   34:}
function _ZN8Password3setENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 10 returned 100% blocks executed 92%
       10:   35:void Password::set(string word){
       10:   36:  if(word.size() >= 8 && word.size() <= 20) {
call    0 returned 10
branch  1 taken 8 (fallthrough)
branch  2 taken 2
call    3 returned 8
branch  4 taken 7 (fallthrough)
branch  5 taken 1
branch  6 taken 7 (fallthrough)
branch  7 taken 3
        7:   37:    if(count_leading_characters(word) <= 3){
call    0 returned 7
call    1 returned 7
branch  2 taken 7 (fallthrough)
branch  3 taken 0 (throw)
call    4 returned 7
branch  5 taken 5 (fallthrough)
branch  6 taken 2
call    7 never executed
call    8 never executed
        5:   38:      if(has_mixed_case(word)){
call    0 returned 5
call    1 returned 5
call    2 returned 5
branch  3 taken 3 (fallthrough)
branch  4 taken 2
        5:   39:        for(auto i : pass_history){
call    0 returned 3
call    1 returned 3
call    2 returned 3
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
call    6 returned 2
call    7 returned 5
branch  8 taken 3
branch  9 taken 2 (fallthrough)
        3:   40:          if(i == word){
call    0 returned 3
branch  1 taken 1 (fallthrough)
branch  2 taken 2
        1:   41:            return;
        -:   42:          }
        3:   43:        }
call    0 returned 3
branch  1 taken 2 (fallthrough)
branch  2 taken 1
        2:   44:          pass_history.push_back(word);
call    0 returned 2
        -:   45:      }
        -:   46:    }  
        -:   47:  }
        -:   48:}
        -:   49:
function _ZN8Password12authenticateENSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE called 10 returned 100% blocks executed 100%
       10:   50:bool Password::authenticate(string word){
       10:   51:  if(pass_history.back() == word){
call    0 returned 10
call    1 returned 10
branch  2 taken 4 (fallthrough)
branch  3 taken 6
        4:   52:    return true;
        -:   53:  }
        6:   54:  return false;
        -:   55:}
